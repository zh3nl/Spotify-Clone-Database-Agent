"use client"

import { Play, User } from "lucide-react"
import { useState } from "react"
import { 
  useRecentlyPlayedTracks, 
  usePopularAlbums, 
  useMadeForYouPlaylists 
} from "@/hooks"

interface Track {
  id: string
  title: string
  artist: string
  album: string
  albumArt: string
  duration: number
}

interface MusicCardProps {
  title: string
  artist: string
  image?: string
  size?: "small" | "medium" | "large"
  className?: string
  onPlay?: () => void
}

function MusicCard({ title, artist, image, size = "medium", className = "", onPlay }: MusicCardProps) {
  const [isHovered, setIsHovered] = useState(false)

  const sizeClasses = {
    small: "w-[180px] h-[180px]",
    medium: "w-full aspect-square",
    large: "w-full aspect-square"
  }

  const handlePlayClick = (e: React.MouseEvent) => {
    e.stopPropagation()
    onPlay?.()
  }

  return (
    <div 
      className={`group cursor-pointer p-4 rounded-lg transition-all duration-300 hover:bg-[var(--color-interactive-hover)] border border-transparent hover:border-gray-600/50 ${className}`}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      <div className={`relative ${sizeClasses[size]} mb-4`}>
        <div className="w-full h-full bg-[var(--color-muted)] rounded-lg flex items-center justify-center overflow-hidden">
          {image ? (
            <img 
              src={image} 
              alt={title}
              className="w-full h-full object-cover rounded-lg"
            />
          ) : (
            <div className="w-full h-full bg-gradient-to-br from-[var(--color-primary)] to-[var(--color-chart-1)] opacity-20 rounded-lg"></div>
          )}
        </div>
        
        {/* Play button overlay */}
        <div className={`absolute inset-0 flex items-center justify-center transition-opacity duration-300 ${
          isHovered ? 'opacity-100' : 'opacity-0'
        }`}>
          <div 
            onClick={handlePlayClick}
            className="w-12 h-12 bg-[var(--color-primary)] rounded-full flex items-center justify-center shadow-lg transform transition-transform duration-300 hover:scale-110 cursor-pointer"
          >
            <Play className="w-5 h-5 text-black fill-black ml-1" />
          </div>
        </div>
      </div>
      
      <div className="space-y-1">
        <h3 className="font-medium text-[var(--color-text-primary)] text-sm truncate">{title}</h3>
        <p className="text-[var(--color-text-secondary)] text-xs truncate">{artist}</p>
      </div>
    </div>
  )
}

interface SpotifyMainContentProps {
  onPlayTrack?: (track: Track) => void
}

// Hardcoded fallback data (preserved from original implementation)
const FALLBACK_RECENTLY_PLAYED: Track[] = [
  { 
    id: "1",
    title: "Liked Songs", 
    artist: "320 songs",
    album: "Your Music",
    albumArt: "https://v3.fal.media/files/panda/kvQ0deOgoUWHP04ajVH3A_output.png",
    duration: 180
  },
  { 
    id: "2",
    title: "Discover Weekly", 
    artist: "Spotify",
    album: "Weekly Mix",
    albumArt: "https://v3.fal.media/files/kangaroo/HRayeBi01JIqfkCjjoenp_output.png",
    duration: 210
  },
  { 
    id: "3",
    title: "Release Radar", 
    artist: "Spotify",
    album: "New Releases",
    albumArt: "https://v3.fal.media/files/panda/q7hWJCgH2Fy4cJdWqAzuk_output.png",
    duration: 195
  },
  { 
    id: "4",
    title: "Daily Mix 1", 
    artist: "Spotify",
    album: "Daily Mix",
    albumArt: "https://v3.fal.media/files/elephant/N5qDbXOpqAlIcK7kJ4BBp_output.png",
    duration: 225
  },
  { 
    id: "5",
    title: "Chill Hits", 
    artist: "Spotify",
    album: "Chill Collection",
    albumArt: "https://v3.fal.media/files/rabbit/tAQ6AzJJdlEZW-y4eNdxO_output.png",
    duration: 240
  },
  { 
    id: "6",
    title: "Top 50 - Global", 
    artist: "Spotify",
    album: "Global Charts",
    albumArt: "https://v3.fal.media/files/kangaroo/0OgdfDAzLEbkda0m7uLJw_output.png",
    duration: 205
  }
];

const FALLBACK_MADE_FOR_YOU: Track[] = [
  { 
    id: "7",
    title: "Discover Weekly", 
    artist: "Your weekly mixtape of fresh music",
    album: "Weekly Discovery",
    albumArt: "https://v3.fal.media/files/kangaroo/HRayeBi01JIqfkCjjoenp_output.png",
    duration: 210
  },
  { 
    id: "8",
    title: "Release Radar", 
    artist: "Catch all the latest music from artists you follow",
    album: "New Music Friday",
    albumArt: "https://v3.fal.media/files/panda/q7hWJCgH2Fy4cJdWqAzuk_output.png",
    duration: 195
  },
  { 
    id: "9",
    title: "Daily Mix 1", 
    artist: "Billie Eilish, Lorde, Clairo and more",
    album: "Alternative Mix",
    albumArt: "https://v3.fal.media/files/elephant/N5qDbXOpqAlIcK7kJ4BBp_output.png",
    duration: 225
  },
  { 
    id: "10",
    title: "Daily Mix 2", 
    artist: "Arctic Monkeys, The Strokes, Tame Impala and more",
    album: "Indie Rock Mix",
    albumArt: "https://v3.fal.media/files/rabbit/tAQ6AzJJdlEZW-y4eNdxO_output.png",
    duration: 240
  },
  { 
    id: "11",
    title: "Daily Mix 3", 
    artist: "Taylor Swift, Olivia Rodrigo, Gracie Abrams and more",
    album: "Pop Mix",
    albumArt: "https://v3.fal.media/files/rabbit/b11V_uidRMsa2mTr5mCfz_output.png",
    duration: 190
  },
  { 
    id: "12",
    title: "On Repeat", 
    artist: "The songs you can't get enough of",
    album: "Your Favorites",
    albumArt: "https://v3.fal.media/files/rabbit/mVegWQYIe0yj8NixTQQG-_output.png",
    duration: 220
  }
];

const FALLBACK_POPULAR_ALBUMS: Track[] = [
  { 
    id: "13",
    title: "Midnights", 
    artist: "Taylor Swift",
    album: "Midnights",
    albumArt: "https://v3.fal.media/files/elephant/C_rLsEbIUdbn6nQ0wz14S_output.png",
    duration: 275
  },
  { 
    id: "14",
    title: "Harry's House", 
    artist: "Harry Styles",
    album: "Harry's House",
    albumArt: "https://v3.fal.media/files/panda/kvQ0deOgoUWHP04ajVH3A_output.png",
    duration: 245
  },
  { 
    id: "15",
    title: "Un Verano Sin Ti", 
    artist: "Bad Bunny",
    album: "Un Verano Sin Ti",
    albumArt: "https://v3.fal.media/files/kangaroo/HRayeBi01JIqfkCjjoenp_output.png",
    duration: 265
  },
  { 
    id: "16",
    title: "Renaissance", 
    artist: "BeyoncÃ©",
    album: "Renaissance",
    albumArt: "https://v3.fal.media/files/elephant/N5qDbXOpqAlIcK7kJ4BBp_output.png",
    duration: 290
  },
  { 
    id: "17",
    title: "SOUR", 
    artist: "Olivia Rodrigo",
    album: "SOUR",
    albumArt: "https://v3.fal.media/files/rabbit/tAQ6AzJJdlEZW-y4eNdxO_output.png",
    duration: 215
  },
  { 
    id: "18",
    title: "Folklore", 
    artist: "Taylor Swift",
    album: "Folklore",
    albumArt: "https://v3.fal.media/files/rabbit/b11V_uidRMsa2mTr5mCfz_output.png",
    duration: 285
  },
  { 
    id: "19",
    title: "Fine Line", 
    artist: "Harry Styles",
    album: "Fine Line",
    albumArt: "https://v3.fal.media/files/panda/q7hWJCgH2Fy4cJdWqAzuk_output.png",
    duration: 255
  },
  { 
    id: "20",
    title: "After Hours", 
    artist: "The Weeknd",
    album: "After Hours",
    albumArt: "https://v3.fal.media/files/kangaroo/0OgdfDAzLEbkda0m7uLJw_output.png",
    duration: 270
  }
];

export default function SpotifyMainContent({ onPlayTrack }: SpotifyMainContentProps) {
  // Use custom hooks for data fetching with built-in fallback handling
  const { 
    tracks: recentlyPlayed, 
    loading: recentlyPlayedLoading, 
    error: recentlyPlayedError 
  } = useRecentlyPlayedTracks({ limit: 12, autoRefresh: true })
  
  const { 
    albums: popularAlbums, 
    loading: popularAlbumsLoading, 
    error: popularAlbumsError 
  } = usePopularAlbums({ limit: 12, autoRefresh: true })
  
  const { 
    playlists: madeForYou, 
    loading: madeForYouLoading, 
    error: madeForYouError 
  } = useMadeForYouPlaylists({ limit: 12, autoRefresh: true })

  // Combine loading states
  const isLoading = recentlyPlayedLoading || popularAlbumsLoading || madeForYouLoading
  
  // Combine error states (only show if all hooks have errors)
  const hasErrors = recentlyPlayedError && popularAlbumsError && madeForYouError
  const error = hasErrors ? 'Unable to load data from server, using cached data' : null
  
  // Provide fallback data if hooks return empty arrays
  const recentlyPlayedData = recentlyPlayed.length > 0 ? recentlyPlayed : FALLBACK_RECENTLY_PLAYED
  const popularAlbumsData = popularAlbums.length > 0 ? popularAlbums : FALLBACK_POPULAR_ALBUMS  
  const madeForYouData = madeForYou.length > 0 ? madeForYou : FALLBACK_MADE_FOR_YOU

  // Data is now loaded automatically by custom hooks - no manual fetching needed

  const handlePlayTrack = (item: Track) => {
    const track: Track = {
      id: item.id,
      title: item.title,
      artist: item.artist,
      album: item.album,
      albumArt: item.albumArt || '/api/placeholder/56/56',
      duration: item.duration
    }
    onPlayTrack?.(track)
  }

  // Loading skeleton component
  const LoadingSkeleton = () => (
    <div className="animate-pulse">
      <div className="flex gap-4 overflow-x-auto pb-4">
        {[...Array(6)].map((_, i) => (
          <div key={i} className="flex-shrink-0 w-[180px]">
            <div className="p-4">
              <div className="w-[180px] h-[180px] bg-gray-700 rounded-lg mb-4"></div>
              <div className="h-4 bg-gray-700 rounded w-3/4 mb-2"></div>
              <div className="h-3 bg-gray-700 rounded w-1/2"></div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )

  // Error message component
  const ErrorMessage = ({ message }: { message: string }) => (
    <div className="p-6 bg-red-900/20 border border-red-700 rounded-lg text-center">
      <p className="text-red-400">{message}</p>
      <button 
        onClick={() => window.location.reload()}
        className="mt-4 px-4 py-2 bg-[var(--color-primary)] text-black rounded-full text-sm font-medium"
      >
        Try Again
      </button>
    </div>
  )

  return (
    <div className="bg-[var(--color-background-primary)] text-[var(--color-text-primary)] min-h-screen">
      {/* Header */}
      <div className="flex items-center justify-between p-6 pb-0">
        <div className="flex items-center gap-4">
          <h1 className="text-2xl font-bold">Good afternoon</h1>
        </div>
        <div className="w-8 h-8 bg-[var(--color-muted)] rounded-full flex items-center justify-center">
          <User className="w-4 h-4 text-[var(--color-text-secondary)]" />
        </div>
      </div>

      {/* Recently Played */}
      <section className="px-6 py-8">
        <div className="flex items-center justify-between mb